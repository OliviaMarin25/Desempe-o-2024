import streamlit as st
import pandas as pd
import plotly.express as px

# ==========================
# CARGA DE DATOS
# ==========================
@st.cache_data
def load_data():
    df = pd.read_csv("Consolidado Desempe침o 2024.csv", sep=";")
    return df

df = load_data()
df.columns = df.columns.str.strip()

# ==========================
# FILTROS GENERALES
# ==========================
st.sidebar.header("Filtros")

direcciones = ["Todas"] + sorted(df["Direcci칩n"].dropna().unique().tolist())
direccion = st.sidebar.selectbox("Direcci칩n", direcciones)

areas = ["Todas"] + sorted(df["츼rea"].dropna().unique().tolist())
area = st.sidebar.selectbox("츼rea", areas)

subareas = ["Todas"] + sorted(df["Sub-치rea"].dropna().unique().tolist())
subarea = st.sidebar.selectbox("Sub-치rea", subareas)

df_filtrado = df.copy()

if direccion != "Todas":
    df_filtrado = df_filtrado[df_filtrado["Direcci칩n"] == direccion]
if area != "Todas":
    df_filtrado = df_filtrado[df_filtrado["츼rea"] == area]
if subarea != "Todas":
    df_filtrado = df_filtrado[df_filtrado["Sub-치rea"] == subarea]

# ==========================
# SECCI칍N 1: RESULTADOS 2024
# ==========================
st.header("游늷 Resultados 2024")

df_2024 = df_filtrado[df_filtrado["A침o"] == 2024]

col1, col2, col3 = st.columns(3)
with col1:
    st.metric("Evaluaciones totales", len(df_2024))
with col2:
    st.metric("Feedback recibido", len(df_2024[df_2024["Estado feedback"] == "Recibido"]))
with col3:
    st.metric("Feedback no recibido", len(df_2024[df_2024["Estado feedback"] == "No Recibido"]))

# Distribuci칩n de notas
st.subheader("Distribuci칩n de notas 2024")
fig_notas = px.histogram(df_2024, x="Nota", nbins=5, title="Distribuci칩n de desempe침o 2024")
st.plotly_chart(fig_notas, use_container_width=True)

# ==========================
# SECCI칍N 2: LIDERAZGO
# ==========================
st.header("游늷 Liderazgo")

# Ranking de l칤deres por promedio de evaluaci칩n
ranking_lideres = (
    df_2024.groupby("L칤der")
    .agg(Promedio=("Nota","mean"), Evaluados=("Colaborador","count"))
    .reset_index()
    .sort_values(by="Promedio", ascending=False)
)

st.subheader("Ranking de l칤deres por promedio")
st.dataframe(ranking_lideres)

fig_lideres = px.bar(ranking_lideres, x="L칤der", y="Promedio", color="Promedio",
                     title="Promedio de desempe침o por l칤der", text_auto=".2f")
st.plotly_chart(fig_lideres, use_container_width=True)

# ==========================
# SECCI칍N 3: HISTORIA DE LA EVALUACI칍N
# ==========================
st.header("游늷 Historia de la Evaluaci칩n de Desempe침o (2022-2024)")

historico = (
    df_filtrado.groupby("A침o")
    .agg(Promedio=("Nota","mean"), Evaluaciones=("Colaborador","count"))
    .reset_index()
)

col1, col2 = st.columns(2)
with col1:
    st.metric("Promedio 2022", round(historico.loc[historico["A침o"]==2022,"Promedio"].values[0],2) if 2022 in historico["A침o"].values else 0)
    st.metric("Promedio 2023", round(historico.loc[historico["A침o"]==2023,"Promedio"].values[0],2) if 2023 in historico["A침o"].values else 0)
    st.metric("Promedio 2024", round(historico.loc[historico["A침o"]==2024,"Promedio"].values[0],2) if 2024 in historico["A침o"].values else 0)

with col2:
    fig_hist = px.line(historico, x="A침o", y="Promedio", markers=True,
                       title="Tendencia hist칩rica del desempe침o")
    st.plotly_chart(fig_hist, use_container_width=True)

# Mostrar detalle tabla hist칩rica
st.subheader("Detalle hist칩rico")
st.dataframe(historico)
